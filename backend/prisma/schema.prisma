// Simple development schema for SQLite
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String?
  avatar      String?
  isActive    Boolean  @default(true)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  exchanges   Exchange[]
  strategies  Strategy[]
}

model Exchange {
  id          String   @id @default(cuid())
  userId      String
  name        String
  type        String   // BINANCE, COINBASE, KRAKEN
  apiKey      String
  apiSecret   String
  isActive    Boolean  @default(true)
  lastSyncAt  DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User      @relation(fields: [userId], references: [id])
  strategies  Strategy[]

  @@map("exchanges")
}

model Strategy {
  id          String   @id @default(cuid())
  userId      String
  exchangeId  String
  name        String
  description String?
  pair        String
  amount      Float
  amountType  String   // FIXED, PERCENTAGE
  frequency   String   // HOURLY, DAILY, WEEKLY, MONTHLY
  startDate   DateTime
  endDate     DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User     @relation(fields: [userId], references: [id])
  exchange    Exchange @relation(fields: [exchangeId], references: [id])
  executions  Execution[]

  @@map("strategies")
}

model Execution {
  id           String   @id @default(cuid())
  strategyId   String
  exchangeId   String
  amount       Float
  price        Float
  quantity     Float
  status       String   // PENDING, COMPLETED, FAILED, CANCELLED
  errorMessage String?
  timestamp    DateTime @default(now())
  createdAt    DateTime @default(now())

  // Relations
  strategy     Strategy @relation(fields: [strategyId], references: [id])

  @@map("executions")
}