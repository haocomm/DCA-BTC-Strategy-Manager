version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dca-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dca_strategy_db
      POSTGRES_USER: dca_user
      POSTGRES_PASSWORD: dca_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dca-network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: dca-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dca-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dca-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dca_user:dca_password@postgres:5432/dca_strategy_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      NEXTAUTH_SECRET: your-nextauth-secret-change-in-production
      NEXTAUTH_URL: http://localhost:3000
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/prisma:/app/prisma
    depends_on:
      - postgres
      - redis
    networks:
      - dca-network
    command: npm run dev

  # Frontend Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dca-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-change-in-production
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - dca-network
    command: npm run dev

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: dca-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    networks:
      - dca-network

volumes:
  postgres_data:
  redis_data:

networks:
  dca-network:
    driver: bridge